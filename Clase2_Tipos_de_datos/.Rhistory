knitr::opts_chunk$set(echo = TRUE)
data=read.table("adult.data.txt", header = FALSE, sep = ",")
data=read.table("adult.data.csv", header = FALSE, sep = ",")
data=read.table("adult.data.csv", header = FALSE, sep = ",")
#Looking for the maximum number of hours and data points with greater than 80 hours
max(data[,13])
index=data[,13]>80
data[index,]
nrow(data[index,])
#Looking for the data with ?
index=rowSums(data==" ?")>0
data[index,]
#Comparing two datapoint
sum(data[1,]==data[2,])
#Agregatting variables income minus outcome
data[,16]=data[,11]-data[,12]
data=data[,c(1:10,16,13:15)]
#Sampling data
sampleIndex=sample(nrow(data),1000, replace = F)
sampleData=data[sampleIndex,]
install.packages("arules")
#install.packages("arules")
library(arules)
#data discretization
temp=discretize(iris$Sepal.Length,breaks=4,method="frequency",labels=F)
#limits
attr(temp,"discretized:breaks")
knitr::opts_chunk$set(echo = TRUE)
data=read.table("adult.data.csv", header = FALSE, sep = ",")
View(data)
data=read.table("rankings_1973-2017.csv", header = TRUE, sep = ",")
data=read.csv("rankings_1973-2017.csv", header = TRUE, sep = ",")
head(data)
summary(data)
dim(data)
#Looking for the maximum number of hours and data points with greater than 80 hours
max(data[,13])
head(data)
data <- read.csv("rankings_1973-2017.csv", header = TRUE, sep = ",")
data <- read.csv("rankings_1973-2017.csv", header = TRUE, sep = ",")
head(data)
data <- data[data$week_year >= 2000,]
data <- data[data$week_year >= 2000, c("week_title", "rank_number", "player_slug")]
data <- read.csv("rankings_1973-2017.csv", header = TRUE, sep = ",")
library(tidyverse)
data2 <- data %>%
filter(week_year >= 2000)
# en R base definimos el nuevo objeto data1 al especificar filas y columnas de la data original
# los corchetes cuadrados denotan [fila, columna]
data1 <- data[data$week_year >= 2000, c("week_year", "rank_number", "player_slug")]
data2 <- data %>%
filter(week_year >= 2000) %>%
select(week_year, rank_number, player_slug)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
unicos <- unique(data2)
unicos <- unique(data2)
summary(unicos)
dim(unicos)
sampleIndex <- sample(nrow(unicos),1000, replace = F)
sampleData <- data[sampleIndex,]
sampleData <- unicos[sampleIndex,]
View(sampleData)
agg_df <- aggregate(rank_number ~ week_year + player_slug, unicos, median)
dimf(agg_df)
dim(agg_df)
agg_df <- aggregate(rank_number ~ week_year + player_slug, data1, median)
dim(agg_df)
# calculamos el maximo valor anual con aggregate
max_rank <- aggregate(rank_number <- week_year, agg_df, max)
View(agg_df)
# calculamos el maximo valor anual con aggregate
max_rank <- aggregate(rank_number ~ week_year, agg_df, max)
View(max_rank)
# calculamos el maximo valor anual con aggregate
max_rank <- aggregate(rank_number ~ week_year as max, agg_df, max)
colnames(max_rank)[3]
colnames(max_rank)[2] <- "max"
agg_df <- merge(agg_df, max_rank, by="week_year")
View(agg_df)
agg_df$rank_relative <- agg_df$rank_number / agg_df$max
summary(agg_df)
agg_df$top5 <- as.numeric(agg_df$rank_relative <= 0.05)
agg_df$top5
plot(agg_df$top5, agg_df$rank_relative)
plot(agg_df$top5, agg_df$rank_number)
plot(agg_df$top5, log(agg_df$rank_number))
library(ggplot2)
data_plot <- agg_df %>% filter(top5)
agg_df$top5 <- as.numeric(agg_df$rank_relative <= 0.05)
data_plot <- agg_df %>% filter(top5)
data_plot <- agg_df %>% filter(top5 == 1)
data_plot <- agg_df %>% filter(top5 == 1)
ggplot() + geom_point(aes(week_year,rank_number))
ggplot(data_plot) + geom_point(aes(week_year,rank_number))
ggplot(data_plot) + geom_point(aes(week_year,rank_number, group =player_slug ))
ggplot(data_plot) + geom_point(aes(week_year,rank_number, col =player_slug ))
ggplot(data_plot) +
geom_point(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = NULL)
ggplot(data_plot) +
geom_point(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = element_blank())
ggplot(data_plot) +
geom_point(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = "none")
ggplot(data_plot) +
geom_point(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = "none") +
scale_y_reverse()
ggplot(data_plot) +
geom_line(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = "none") +
scale_y_reverse()
ggplot(data_plot) +
geom_smooth(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = "none") +
scale_y_reverse()
ggplot(data_plot) +
geom_point(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = "none") +
scale_y_reverse()
agg_df$top10 <- as.numeric(agg_df$rank_number <= 10)
data_plot <- agg_df %>% filter(top10 == 1)
ggplot(data_plot) +
geom_point(aes(week_year,rank_number, col =player_slug )) +
scale_y_reverse()
ggplot(data_plot) +
geom_point(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = "bottom") +
scale_y_reverse()
ggplot(data_plot) +
geom_line(aes(week_year,rank_number, col =player_slug )) +
theme(legend.position = "bottom") +
scale_y_reverse()
