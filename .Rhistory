ggplot(res, aes(log(h), sil)) +
geom_point()
ggplot(res, aes(h, sil)) +
geom_point() +
scale_x_log10()
ggplot(res, aes(h, sil)) +
geom_point() +
scale_x_log10() +
scale_y_log10()
library(tidyverse)
data <- data.frame("var1" = 1:100, "var2" = rnorm(100))
View(data)
table(data$var1)
summary(data)
data %>% summary()
data %>% mean() %>% sum()
? quantile
quantile(data$var2, probs = 0.5)
median(data$var2)
quantile(data$var2)
(1:100)/100
1:100
(1:100)/100
quantile(data$var2, probs = (1:100)/100)
knitr::opts_chunk$set(echo = TRUE)
##############################################################################
library(mclust)
? mclust
data_escalada  <- read.csv("video_games_sales.csv") %>%
mutate(User_Score = as.numeric(User_Score)) %>%
filter(!(is.na(Critic_Score) | is.na(User_Score))) %>%
select(-Global_Sales) %>%
select(c(6:9, 10, 12)) %>%
scale() %>%
as_tibble()
library(tidyverse)
library(tidyverse)
data_escalada  <- read.csv("video_games_sales.csv") %>%
mutate(User_Score = as.numeric(User_Score)) %>%
filter(!(is.na(Critic_Score) | is.na(User_Score))) %>%
select(-Global_Sales) %>%
select(c(6:9, 10, 12)) %>%
scale() %>%
as_tibble()
data_escalada %>% head()
#DBSCAN
#install.packages("dbscan")
library(dbscan)
model = dbscan(data_escalada, eps = 0.2, minPts = 5)
model
ggplot(data_escalada, aes(NA_Sales, User_Score, color = factor(model$cluster))) + geom_point()+theme(axis.text=element_text(size=12),axis.title=element_text(size=18))
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(model$cluster))) + geom_point()+theme(axis.text=element_text(size=12),axis.title=element_text(size=18))
model
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(model$cluster))) +
geom_point() +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(model$cluster))) +
geom_point(alpha = 0.3) +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
data_pc <- data_escalada %>% prcomp() %>% predict() %>% select(PC1, PC2)
data_pc <- data_escalada %>% prcomp() %>% predict() %>% as.data.frame() %>% select(PC1, PC2)
View(data_pc)
ggplot(data_pc, aes(PC1, PC2, color = factor(model$cluster))) +
geom_point(alpha = 0.3) +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
data_pc <- data_escalada %>% prcomp() %>% predict() %>% as.data.frame() %>% select(PC1, PC8)
data_pc <- data_escalada %>% prcomp() %>% predict() %>% as.data.frame() %>% select(PC1, PC5)
ggplot(data_pc, aes(PC1, PC5, color = factor(model$cluster))) +
geom_point(alpha = 0.3) +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
library(fclust)
coefSil <- numeric(50)
coefSil <- numeric(50)
for (i in 1:50){
temp <- FKM(data_escalada, i, m=3)
coefSil[i] <- temp$criterion
}
temp <- FKM(data_escalada, 10, m=3)
library(e1071)
modelo_c_means1 <- FKM(data_escalada, 10, m=3)
modelo_c_means2 <- cmeans(data_escalada, 10, m=3)
modelo_c_means1 <- FKM(data_escalada, 10, m=3)
modelo_c_means$memership
modelo_c_means <- cmeans(data_escalada, 10, m=3)
modelo_c_means$memership
modelo_c_means$membership
modelo_c_means$membership %>% head()
#Trace of the cluster
matriz <- modelo_c_means$U%*%t(modelo_c_means$U) #matrix multiplication
temp <- FKM(data_escalada, 10, m=3)
temp$U
#Trace of the cluster
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) #matrix multiplication
modelo_c_means <- cmeans(data_escalada, 10, m=3)
modelo_c_means <- cmeans(data_escalada, 10, m=3)
modelo_c_means$membership %>% head()
sum(matriz*diag(nrow(matriz)))/nrow(matriz)
FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz)
modelo_c_means$clus
modelo_c_means$clus[,1]
ggplot(data_escalada) +
aes(x=Critic_Score,y=User_Score,color=factor(modelo_c_means$clus)) +
geom_point(alpha=0.5,show.legend = F) +
theme_bw()
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
library(mclust)
#Training the model
model = Mclust(data_escalada)
summary(model)
#Assignations
model$z
model$classification
data[model$classification==9,1]
plot(model)
#Assignations
model$z
ggplot(data)+
aes(x=Critic_Score, y=User_Score, color=factor(model$classification)) +
geom_point(alpha=0.5,show.legend = F) +
theme_bw()
#Training the model
model = Mclust(data_escalada)
? mclust::plot
plot(model)
plot(model, 2)
plot(model, x = BIC)
plot(model, x = "BIC")
plot(model, what = "BIC")
plot(model, what = "AIC")
plot(model, what = "classification")
plot(model, what = "uncertainty")
#AIC BIC
plot(model, what = "BIC")
ggplot(data_escalada) +
aes(x=Critic_Score, y=User_Score, color=factor(model$classification)) +
geom_point(alpha=0.5, show.legend = F) +
theme_bw()
```{r, message = FALSE, warning = FALSE}
```{r}
model = dbscan(data_escalada, eps = 0.2, minPts = 5)
model
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(model$cluster))) +
geom_point(alpha = 0.3) +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
data_escalada  <- read.csv("video_games_sales.csv") %>%
mutate(User_Score = as.numeric(User_Score)) %>%
filter(!(is.na(Critic_Score) | is.na(User_Score))) %>%
select(-Global_Sales, Critic_Score, User_Score) %>%
select(c(6:9, 10, 12)) %>%
scale() %>%
as_tibble()
data_escalada  <- read.csv("video_games_sales.csv") %>%
mutate(User_Score = as.numeric(User_Score)) %>%
filter(!(is.na(Critic_Score) | is.na(User_Score))) %>%
select(-Global_Sales, Critic_Score, User_Score) %>%
#select(c(6:9, 10, 12)) %>%
scale() %>%
as_tibble()
data_escalada  <- read.csv("video_games_sales.csv") %>%
mutate(User_Score = as.numeric(User_Score)) %>%
filter(!(is.na(Critic_Score) | is.na(User_Score))) %>%
select(-Global_Sales) %>%
select(Critic_Score, User_Score) %>%
scale() %>%
as_tibble()
library(tidyverse)
data_escalada  <- read.csv("video_games_sales.csv") %>%
mutate(User_Score = as.numeric(User_Score)) %>%
filter(!(is.na(Critic_Score) | is.na(User_Score))) %>%
select(-Global_Sales) %>%
select(Critic_Score, User_Score) %>%
scale() %>%
as_tibble()
data_escalada %>% head()
data_escalada %>% summary()
library(dbscan)
model = dbscan(data_escalada, eps = 0.2, minPts = 5)
model
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(model$cluster))) +
geom_point(alpha = 0.3) +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
model = dbscan(data_escalada, eps = 0.1, minPts = 5)
model
model = dbscan(data_escalada, eps = 0.15, minPts = 5)
model
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(model$cluster))) +
geom_point(alpha = 0.3) +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
model = dbscan(data_escalada, eps = 0.15, minPts = 15)
model
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(model$cluster))) +
geom_point(alpha = 0.3) +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
library(e1071)
modelo_c_means <- cmeans(data_escalada, 10, m=3)
model = dbscan(data_escalada, eps = 0.1, minPts = 15)
model
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(model$cluster))) +
geom_point(alpha = 0.3) +
theme(axis.text = element_text(size=12), axis.title = element_text(size = 18))
modelo_c_means <- cmeans(data_escalada, 16, m=3)
modelo_c_means$membership %>% head()
modelo_c_means$cluster
modelo_c_means$membership %>% head()
ggplot(data_escalada, aes(Critic_Score, User_Score, color = factor(modelo_c_means$cluster))) +
geom_point(alpha = 0.3)
modelo_c_means$membership %>% head()
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) # producto matricial
matriz <- modelo_c_means$membership%*%t(modelo_c_means$membership) # producto matricial
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
#Training the model
model = Mclust(data_escalada)
ggplot(data_escalada) +
aes(x=Critic_Score, y=User_Score, color=factor(model$classification)) +
geom_point(alpha=0.5, show.legend = F) +
theme_bw()
ggplot(data_escalada) +
aes(x=Critic_Score, y=User_Score, color=factor(model_gmm$classification)) +
geom_point(alpha=0.5)
#Training the model
model_gmm = Mclust(data_escalada)
matriz <- model_gmm$classification%*%t(model_gmm$classification) # producto matricial
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
model_gmm$classification
modelo_c_means$membership
model_gmm$uncertainty
model_gmm$data
model_gmm$z
ggplot(data_escalada) +
aes(x=Critic_Score, y=User_Score, color=factor(model_gmm$classification)) +
geom_point(alpha=0.5)
model_gmm
model_gmm %>% summary()
model_gmm
? Mclust
summary(model_gmm, parameters = TRUE)
summary(model_gmm)
summary(model_gmm, parameters = TRUE)
El modelo genero 5 clusters los que se pueden visualizar igual que los ejemplos anteriores
```{r}
ggplot(data_escalada) +
aes(x=Critic_Score, y=User_Score, color=factor(model_gmm$classification)) +
geom_point(alpha=0.5)
plot(model, what = "BIC")
ggplot(data_escalada) +
aes(x=Critic_Score, y=User_Score, color=factor(model_gmm$classification)) +
geom_point(alpha=0.5)
plot(model_gmm, what = "BIC")
(FPC <- sum(matriz*diag(nrow(matriz)))/nrow(matriz))
library(readxl)
Propiedades_SII_CBR_indicadores <- read_excel("C:/Users/raimu/Dropbox/01.Docencia/01.Casos/data precios viviendas/Propiedades_SII_CBR_indicadores.xlsx")
View(Propiedades_SII_CBR_indicadores)
colnames(Propiedades_SII_CBR_indicadores)
data <- Propiedades_SII_CBR_indicadores %>% select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR,
ESTACIONAM, DPTO_CASA, BODEGA, DEN_MZ, COLE_15MIN,
JARDIN_15M, SC_15MIN)
library(tidyverse)
data <- Propiedades_SII_CBR_indicadores %>% select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR,
ESTACIONAM, DPTO_CASA, BODEGA, DEN_MZ, COLE_15MIN,
JARDIN_15M, SC_15MIN)
data <- Propiedades_SII_CBR_indicadores %>% select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR,
ESTACIONAM, DPTO_CASA, BODEGA, DEN_MZ, COLE_15MIN,
JARDIN_15M, SC_15MIN) %>%
unique()
data <- Propiedades_SII_CBR_indicadores %>% select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR,
ESTACIONAM, DPTO_CASA, BODEGA, DEN_MZ, COLE_15MIN,
JARDIN_15M, SC_15MIN) %>%
unique() %>%
sample_n(10000)
data <- Propiedades_SII_CBR_indicadores %>% select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR,
ESTACIONAM, DPTO_CASA, BODEGA, DEN_MZ, COLE_15MIN,
JARDIN_15M, SC_15MIN) %>%
unique() %>%
sample_n(3000)
write_csv(data, "propiedades.csv")
View(data)
colnames(data)
colnames(data) <- c("Precio", "Terreno", "Construido", "Año_Construccion", "Estacionamiento", "depto_casa", "bodega", "densidad_barrio",
"colegio_15m", "jardin_15m", "trabajo_15m")
write_csv(data, "propiedades.csv")
View(data)
knitr::opts_chunk$set(echo = TRUE)
propiedades <- read_csv("propiedades.csv")
View(propiedades)
summary(propiedades)
data <- Propiedades_SII_CBR_indicadores %>% select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR,
DEN_MZ, COLE_15MIN,
JARDIN_15M, SC_15MIN) %>%
unique() %>% filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0)
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN) %>%
unique() %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0) %>%
sample_n(3000)
colnames(data) <- c("Precio", "Terreno", "Construido", "Año_Construccion", "densidad_barrio",
"colegio_15m", "jardin_15m", "trabajo_15m")
summary(data)
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN) %>%
unique() %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0, UF_TRANS > 1000) %>%
sample_n(3000)
colnames(data) <- c("Precio", "Terreno", "Construido", "Año_Construccion", "densidad_barrio",
"colegio_15m", "jardin_15m", "trabajo_15m")
summary(data)
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN) %>%
unique() %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0, UF_TRANS > 1000, UF_TRANS < 40000) %>%
sample_n(3000)
colnames(data) <- c("Precio", "Terreno", "Construido", "Año_Construccion", "densidad_barrio",
"colegio_15m", "jardin_15m", "trabajo_15m")
summary(data)
write_csv(data, "propiedades.csv")
propiedades <- read_csv("propiedades.csv")
summary(propiedades)
library(tidyverse)
summary(propiedades)
library(tidyverse)
propiedades <- read_csv("propiedades.csv")
summary(propiedades)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(tidyverse)
propiedades <- read_csv("propiedades.csv")
summary(propiedades)
regresion_lineal <- lm(Precio~Terreno, propiedades)
plot(regresion_lineal)
ggplot(propiedades, aes(Precio, Terreno))
ggplot(propiedades, aes(Precio, Terreno)) +
geom_point()
propiedades <- propiedades %>% filter(Terreno < 5000)
ggplot(propiedades, aes(Precio, Terreno)) +
geom_point()
propiedades <- propiedades %>% filter(Terreno < 3000)
ggplot(propiedades, aes(Precio, Terreno)) +
geom_point()
ggplot(propiedades, aes(Precio, Terreno)) +
geom_point() +
geom_smooth(method = "lm")
regresion_lineal <- lm(Precio~Terreno, propiedades)
summary(regresion_lineal)
? lm
regresion_log <- lm(log(Precio)~Terreno, propiedades)
summary(regresion_log)
regresion_log <- lm(log(Precio)~log(Terreno), propiedades)
summary(regresion_log)
regresion_log <- lm((Precio)~log(Terreno), propiedades)
summary(regresion_log)
regresion_log <- lm(log(Precio)~log(Terreno), propiedades)
summary(regresion_log)
regresion_poli <- lm(log(Precio)~ Terreno + Terreno^2, propiedades)
summary(regresion_poli)
propiedades$Tereno2 <- propiedades$Terreno^2
propiedades$Tereno3 <- propiedades$Terreno^3
regresion_poli <- lm(log(Precio)~ Terreno + Terreno2 + Terreno3, propiedades)
propiedades$Terreno2 <- propiedades$Terreno^2
propiedades$Terreno3 <- propiedades$Terreno^3
regresion_poli <- lm(log(Precio)~ Terreno + Terreno2 + Terreno3, propiedades)
summary(regresion_poli)
regresion_poli <- lm(Precio~ Terreno + Terreno2 + Terreno3, propiedades)
summary(regresion_poli)
regresion_poli <- lm(log(Precio) ~ Terreno + Terreno2 + Terreno3, propiedades)
summary(regresion_poli)
regresion_multi <- lm(Precio ~ Terreno+Construido+Año_Construccion+densidad_barrio+colegio_15m + jardin_15m + trabajo_15m , propiedades)
summary(regresion_poli)
summary(regresion_multi)
regresion_multi <- lm(log(Precio) ~ Terreno+Construido+Año_Construccion+densidad_barrio+colegio_15m + jardin_15m + trabajo_15m , propiedades)
summary(regresion_multi)
regresion_multi <- lm((Precio) ~ Terreno+Construido+Año_Construccion+densidad_barrio+colegio_15m + jardin_15m + trabajo_15m , propiedades)
summary(regresion_multi)
library(olsrr)
install.packages("olsrr")
library(olsrr)
library(olsrr)
ols_step_all_possible(regresion_multi)
fuerza_bruta <- ols_step_all_possible(regresion_multi)
summary(fuerza_bruta)
plot(fuerza_bruta)
fuerza_bruta <- ols_step_all_possible(regresion_multi)
fuerza_bruta <- ols_step_all_possible(regresion_multi)
plot(fuerza_bruta)
sel_adelante <- ols_step_forward_p(regresion_multi)
sel_adelante <- ols_step_forward_p(regresion_multi)
plot(sel_adelante)
sel_atras <- ols_step_backward_p(regresion_multi)
plot(sel_atras)
sel_atras <- ols_step_backward_p(regresion_multi)
plot(sel_atras)
sel_atras
sel_adelante
library(tidyverse)
Propiedades_SII_CBR_indicadores <- read_excel("C:/Users/raimu/Dropbox/01.Docencia/01.Casos/data precios viviendas/Propiedades_SII_CBR_indicadores.xlsx")
? read_excel
library(tidyverse)
Propiedades_SII_CBR_indicadores <- read_excel("C:/Users/raimu/Dropbox/01.Docencia/01.Casos/data precios viviendas/Propiedades_SII_CBR_indicadores.xlsx")
library(readxl)
Propiedades_SII_CBR_indicadores <- read_excel("C:/Users/raimu/Dropbox/01.Docencia/01.Casos/data precios viviendas/Propiedades_SII_CBR_indicadores.xlsx")
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN, DPTO_CASA) %>%
unique() %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0, UF_TRANS > 1000, UF_TRANS < 40000) %>%
sample_n(3000)
View(data)
summary(data)
table(data$DPTO_CASA)
View(data)
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN, ESTACIONAM) %>%
unique() %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0, UF_TRANS > 1000, UF_TRANS < 40000) %>%
sample_n(3000)
summary(data)
View(data)
? sample_n
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN, ESTACIONAM) %>%
unique() %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0, UF_TRANS > 1000, UF_TRANS < 40000) %>%
sample_n(3000, weight = ESTACIONAM)
View(Propiedades_SII_CBR_indicadores)
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN, ESTACIONAM) %>%
unique() %>%
mutate(SUP_TERR = ifelse(SUP_TERR == 0, SUP_CONSTR, SUP_TERR)) %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0, UF_TRANS > 1000, UF_TRANS < 40000) %>%
sample_n(3000, weight = ESTACIONAM)
View(data)
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN) %>%
unique() %>%
mutate(SUP_TERR = ifelse(SUP_TERR == 0, SUP_CONSTR, SUP_TERR)) %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0, UF_TRANS > 1000, UF_TRANS < 40000) %>%
sample_n(3000)
View(data)
data <-
Propiedades_SII_CBR_indicadores %>%
select(UF_TRANS, SUP_TERR, SUP_CONSTR, ANO_CONSTR, DEN_MZ, COLE_15MIN, JARDIN_15M, SC_15MIN) %>%
unique() %>%
mutate(SUP_TERR = ifelse(SUP_TERR == 0, SUP_CONSTR, SUP_TERR),
DEPTO = (SUP_TERR == SUP_CONSTR)) %>%
filter(SUP_TERR > 0, SUP_CONSTR >0, ANO_CONSTR >0, DEN_MZ>0, UF_TRANS > 1000, UF_TRANS < 40000) %>%
sample_n(3000)
summary(data)
colnames(data) <- c("Precio", "Terreno", "Construido", "Año_Construccion", "densidad_barrio",
"colegio_15m", "jardin_15m", "trabajo_15m", "es_depto")
summary(data)
write_csv(data, "propiedades2.csv")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
propiedades <- read_csv("propiedades2.csv")
propiedades %>% glimpse()
modelo_logistico <- glm(es_depto ~ Terreno, propiedades)
? glm
modelo_logistico <- glm(es_depto ~ Terreno, propiedades, family = "binomial")
summary(modelo_logistico)
roc(modelo_logistico)
prob=predict(modelo_logistico,type=c("response"))
propiedades$prob=prob
library(pROC)
g <- roc(es_depto ~ prob, data = propiedades)
plot(g)
auc = performance(propiedades$prob, "auc")
? roc
g <- auc(es_depto ~ prob, data = propiedades)
plot(g)
curva_roc <- roc(es_depto ~ prob, data = propiedades)
plot(curva_rocg)
plot(curva_roc)
auc(curva_roc)
prob=predict(modelo_logistico,type=c("response"))
propiedades$prob=prob
library(pROC)
curva_roc <- roc(es_depto ~ prob, data = propiedades)
plot(curva_roc)
auc(curva_roc)
auc(curva_roc)
modelo_logistico_multi <- glm(es_depto ~ ., propiedades, family = "binomial")
summary(modelo_logistico_multi)
propiedades$prob_multi <- predict(modelo_logistico,type=c("response"))
auc(roc(es_depto ~ prob_multi, data = propiedades))
propiedades$prob_multi <- predict(modelo_logistico_multi, type=c("response"))
auc(roc(es_depto ~ prob_multi, data = propiedades))
summary(modelo_logistico_multi)
sample_frac(propiedades, .8)
muestra <- sample_frac(1:nrow(propiedades), .8)
data_train <- propiedades[muestra,]
muestra <- sample_frac(1:nrow(propiedades), .8)
muestra <- sample_frac(data.frame(1:nrow(propiedades)), .8)
data_train <- propiedades[muestra,]
muestra <- sample(1:nrow(propiedades), 8)
muestra <- sample(1:nrow(propiedades), nrow(propiedades)*.8)
data_train <- propiedades[muestra,]
data_train <- propiedades[!muestra,]
data_train <- propiedades[-muestra,]
data_train <- propiedades[muestra,]
data_test <- propiedades[-muestra,]
modelo_logistico_multi <- glm(es_depto ~ Precio + Terreno + Construido + Año_Construccion + colegio_15m, propiedades, family = "binomial")
summary(modelo_logistico_multi)
? predict
data_test$prob_multi <- predict(modelo_logistico_multi, data= data_test, type=c("response"))
data_test$prob_multi <- predict(modelo_logistico_multi, data_test, type=c("response"))
auc(roc(es_depto ~ prob_multi, data = data_test))
auc(roc(es_depto ~ prob_multi, data = propiedades))
